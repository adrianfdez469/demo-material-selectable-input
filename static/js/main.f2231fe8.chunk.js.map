{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","React","useState","allCountries","setAllCountries","list","setList","useEffect","a","fetch","countriesResp","ok","json","countries","mappedCountries","map","c","id","name","text","population","style","margin","fontSize","optionsList","excludedOptions","onAdd","item","textFieldProps","variant","items","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2QA2CeA,EAxCH,WAAO,IAAD,EACwBC,IAAMC,SAAS,IADvC,mBACTC,EADS,KACKC,EADL,OAEQH,IAAMC,SAAS,IAFvB,mBAETG,EAFS,KAEHC,EAFG,KAGhBL,IAAMM,WAAU,WACd,sBAAC,gCAAAC,EAAA,sEAC6BC,MAAM,wCADnC,YACOC,EADP,QAEmBC,GAFnB,gCAG2BD,EAAcE,OAHzC,OAGSC,EAHT,OAISC,EAAkBD,EAAUE,KAAI,SAAAC,GACpC,MAAO,CAAEC,GAAID,EAAEE,KAAMC,KAAMH,EAAEE,KAAME,WAAYJ,EAAEI,eAEnDhB,EAAgBU,GAPnB,0CAAD,KAUC,IAMH,OACE,sBAAKO,MAAO,CAAEC,OAAQ,OAAQC,SAAU,QAAxC,UACE,qFACA,+BACE,mIACA,uHACA,gNACA,mLACA,wGACA,8LAGF,cAAC,IAAD,CAAaC,YAAarB,EAAcsB,gBAAiBpB,EAAMqB,MAhB9C,SAACC,GACpBrB,EAAQ,GAAD,mBAAKD,GAAL,CAAWsB,MAeoEC,eAAgB,CAClGC,QAAS,cAEVxB,EAAKU,KAAI,SAAAe,GAAK,OAAI,8BAAuBA,EAAMX,MAAnBW,EAAMX,aC1B1BY,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f2231fe8.chunk.js","sourcesContent":["import React from 'react';\nimport InputSelect from 'react-material-selectable-inputtext';\n\nconst App = () => {\n  const [allCountries, setAllCountries] = React.useState([]);\n  const [list, setList] = React.useState([]);\n  React.useEffect(() => {\n    (async () => {\n      const countriesResp = await fetch('https://restcountries.eu/rest/v2/all');\n      if (countriesResp.ok) {\n        const countries = await countriesResp.json();\n        const mappedCountries = countries.map(c => {\n          return { id: c.name, text: c.name, population: c.population }\n        });\n        setAllCountries(mappedCountries);\n      }\n    })()\n  }, []);\n\n  const onAddHandler = (item) => {\n    setList([...list, item]);\n  }\n\n  return (\n    <div style={{ margin: '20px', fontSize: '20px' }}>\n      <h2>To see what the component can do, follow the steps.</h2>\n      <ol>\n        <li>Focus the component and white an \"A\" letter, it will pop up all the countries that begin with \"A\"</li>\n        <li>Press the arrow down key from your keyboard, and choose \"Albania\", then press \"Enter\"</li>\n        <li>Again write an \"A\" letter, you'll see that \"Albania\" is no longer available. This time with your mouse select other country option and press \"Enter\" or press the plus button</li>\n        <li>Now write anther country name without selecting it from the list and added, you can see after that the country is no logner available on the list</li>\n        <li>Also you can write anything that is not on the list, and added as well</li>\n        <li>Be aware that we you write a substring, you can navigate throgth the options with down arrow key, but you can comeback to the input with the ip arrow key</li>\n      </ol>\n\n      <InputSelect optionsList={allCountries} excludedOptions={list} onAdd={onAddHandler} textFieldProps={{\n        variant: 'outlined'\n      }} />\n      {list.map(items => <div key={items.text}>{items.text}</div>)}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}